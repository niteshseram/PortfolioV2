{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","components/Header/script.js","components/Link/Link.js","components/Links/Links.js","components/Header/Header.js","containers/Introduction/Introduction.js","containers/MainSection/MainSection.js","containers/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","HamburgerBubble","navLinks","document","querySelector","links","querySelectorAll","hamburger","menuOpen","classList","remove","toggle","forEach","link","Link","title","href","Links","className","map","Header","onClick","Introduction","imgRef","useRef","hiRef","nameRef","profRef","resumeRef","useEffect","t1","gsap","timeline","TweenLite","fromTo","current","opacity","scale","duration","y","id","ref","src","alt","MainSection","App","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a88cfb0c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const HamburgerBubble = () => {\r\n  const navLinks = document.querySelector(\".nav-links\");\r\n  const links = document.querySelectorAll(\".nav-links li\");\r\n  const hamburger = document.querySelector(\".hamburger\");\r\n  let menuOpen = false;\r\n  if (!menuOpen) {\r\n    navLinks.classList.toggle(\"open\");\r\n    hamburger.classList.toggle(\"open\");\r\n    menuOpen = true;\r\n  } else {\r\n    navLinks.classList.remove(\"open\");\r\n    hamburger.classList.remove(\"open\");\r\n    menuOpen = false;\r\n  }\r\n  links.forEach((link) => {\r\n    link.classList.toggle(\"fade\");\r\n  });\r\n};\r\n\r\nexport { HamburgerBubble };\r\n","import React from \"react\";\r\n\r\nconst Link = ({ link, title }) => {\r\n  return (\r\n    <li>\r\n      <a href=\"{link}\">{title}</a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import React from \"react\";\r\nimport Link from \"../Link/Link\";\r\n\r\nconst Links = ({ links }) => {\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      {links.map((link) => (\r\n        <Link key={link.title} link={link.link} title={link.title} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import React from \"react\";\r\nimport { HamburgerBubble } from \"./script\";\r\nimport \"./Header.css\";\r\nimport Links from \"../Links/Links\";\r\n\r\nconst Header = () => {\r\n  const navLinks = [\r\n    { link: \"#about\", title: \"ABOUT\" },\r\n    { link: \"#skills\", title: \"SKILLS\" },\r\n    { link: \"#project\", title: \"PROJECT\" },\r\n    { link: \"#contact\", title: \"CONTACT\" },\r\n  ];\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"brand\">\r\n        <a href=\"niteshseram.me\">Nitesh Seram</a>\r\n      </div>\r\n      <nav>\r\n        <div className=\"hamburger\" onClick={HamburgerBubble}></div>\r\n        <Links links={navLinks} />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport \"./Introduction.css\";\r\nimport { gsap, TweenLite } from \"gsap\";\r\n\r\nconst Introduction = () => {\r\n  const imgRef = useRef(null);\r\n  const hiRef = useRef(null);\r\n  const nameRef = useRef(null);\r\n  const profRef = useRef(null);\r\n  const resumeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let t1 = gsap.timeline();\r\n    TweenLite.fromTo(\r\n      imgRef.current,\r\n      { opacity: 0, scale: 0 },\r\n      {\r\n        opacity: 1,\r\n        scale: 1,\r\n        duration: 1,\r\n      }\r\n    );\r\n    t1.fromTo(\r\n      hiRef.current,\r\n      { y: -50, opacity: 0 },\r\n      { y: 0, opacity: 1, duration: 1 }\r\n    );\r\n    t1.fromTo(\r\n      nameRef.current,\r\n      { y: -50, opacity: 0 },\r\n      { y: 0, opacity: 1, duration: 1 }\r\n    );\r\n    t1.fromTo(\r\n      profRef.current,\r\n      { y: -50, opacity: 0 },\r\n      { y: 0, opacity: 1, duration: 1 }\r\n    );\r\n    t1.fromTo(\r\n      resumeRef.current,\r\n      { y: -50, opacity: 0 },\r\n      { y: 0, opacity: 1, duration: 1 }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"intro\">\r\n      <div className=\"image\" ref={imgRef}>\r\n        <img src=\"../../assets/images/dp.png\" alt=\"profile pic\" />\r\n      </div>\r\n      <div className=\"intro-text\">\r\n        <h1 className=\"hi\" ref={hiRef}>\r\n          Hi, I'm\r\n        </h1>\r\n        <h1 className=\"name\" ref={nameRef}>\r\n          Nitesh Seram\r\n        </h1>\r\n        <h2 className=\"profession\" ref={profRef}>\r\n          Full Stack Web Developer\r\n        </h2>\r\n        <div className=\"resume\" ref={resumeRef}>\r\n          <a className=\"btn resume-btn\" href=\"resume\">\r\n            Get Resume\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Introduction;\r\n","import React from \"react\";\r\nimport Introduction from \"../Introduction/Introduction\";\r\n\r\nconst MainSection = () => {\r\n  return (\r\n    <main>\r\n      <Introduction />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainSection;\r\n","import React from \"react\";\nimport Header from \"../components/Header/Header\";\nimport \"./App.css\";\nimport MainSection from \"./MainSection/MainSection\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainSection />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}